class Solution {
    public int[] frequencySort(int[] nums) {
        int n=nums.length;
        Map<Integer,Integer> hm=new HashMap<>();

        for(int i=0;i<n;i++){
            hm.put(nums[i],hm.getOrDefault(nums[i],0)+1);
        }

        int max=nums[0];
        int idx=0;
        
        while(!hm.isEmpty()){
            Map.Entry<Integer,Integer> maxEntry = null;
            for (Map.Entry<Integer,Integer> entry : hm.entrySet()) {
                if (maxEntry == null || entry.getValue()<maxEntry.getValue() || entry.getValue().equals(maxEntry.getValue()) && maxEntry.getKey()<entry.getKey()) {
                    maxEntry = entry;
                }
            }
            for(int i=0;i<maxEntry.getValue();i++){
                nums[idx]=maxEntry.getKey();
                idx++;
            }
            hm.remove(maxEntry.getKey());
        }
        return nums;
    }
}
